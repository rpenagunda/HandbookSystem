@model HandbookSystem.Models.ModuleInfo

@{
    Layout = "~/Views/Shared/_HandbookLayout.cshtml";
}

<div id="first_page" class="row-header">
    <p><img src="@Url.Content("~/content/images/logo.jpg")"/></p>
    <h2>@Model.Department</h2>
    <h1>@Model.ModuleTitle</h1>
    <h2>@Model.Credits</h2>
    <br/>
    <h3>Module Handbook</h3>
    <h3>2015/16</h3>
    <br/>
    <br/>
    <h4>Module leader: @Model.ModuleLeader</h4>
    <h4><i class="fa fa-phone-square" aria-hidden="true"></i> @Model.ModuleLeaderPhone</h4>
    <h4><i class="fa fa-envelope" aria-hidden="true"></i> <a href="mailto:@Model.ModuleLeaderEmail">@Model.ModuleLeaderEmail</a></h4>
    <br/>
    <br/>
    <h4>Administrator: <i class="fa fa-phone-square" aria-hidden="true"></i> @Model.AdministratorPhone</h4>
    <br/>
    <br/>
    <br/>
    <br/>
    <br/>
    <br/>
</div>

@{
    if (!string.IsNullOrWhiteSpace(Model.InclusiveServices))
    {
        <div class="row-header">
            <p class="section-header">@Html.LabelFor(model => model.InclusiveServices)</p><br />
            @Html.Raw(Model.InclusiveServices)
        </div>
    }
}

@{
    if (!string.IsNullOrWhiteSpace(Model.ModuleOverview))
    {
        <div class="row-header">
            <p class="section-header">@Html.LabelFor(model => model.ModuleOverview)</p><br />
            @Html.Raw(Model.ModuleOverview)
        </div>
    }
}

@{
    if (!string.IsNullOrWhiteSpace(Model.Advice))
    {
        <div class="row-header">
            <p class="section-header">@Html.LabelFor(model => model.Advice)</p><br />
            @Html.Raw(Model.Advice)
        </div>
    }
}

@{
    if (!string.IsNullOrWhiteSpace(Model.LearningOutcomes))
    {
        <div class="row-header">
            <p class="section-header">@Html.LabelFor(model => model.LearningOutcomes)</p><br />
            @Html.Raw(Model.LearningOutcomes)
        </div>
    }
}

@{
    if (!string.IsNullOrWhiteSpace(Model.OutlineContent))
    {
        <div class="row-header">
            <p class="section-header">@Html.LabelFor(model => model.OutlineContent)</p><br />
            @Html.Raw(Model.OutlineContent)
        </div>
    }
}

@{
    if (!string.IsNullOrWhiteSpace(Model.VleBlackboard))
    {
        <div class="row-header">
            <p class="section-header">@Html.LabelFor(model => model.VleBlackboard)</p><br />
            @Html.Raw(Model.VleBlackboard)
        </div>
    }
}

@{
    if (!string.IsNullOrWhiteSpace(Model.Assessment))
    {
        <div class="row-header">
            <p class="section-header">@Html.LabelFor(model => model.Assessment)</p><br />
            @Html.Raw(Model.Assessment)
        </div>
    }
}

@{
    if (!string.IsNullOrWhiteSpace(Model.Coursework))
    {
        <div class="row-header">
            <p class="section-header">@Html.LabelFor(model => model.Coursework)</p><br />
            @Html.Raw(Model.Coursework)
        </div>
    }
}

@{
    if (!string.IsNullOrWhiteSpace(Model.ReadingList))
    {
        <div class="row-header">
            <p class="section-header">@Html.LabelFor(model => model.ReadingList)</p><br />
            @Html.Raw(Model.ReadingList)
        </div>
    }
}

@{
    if (!string.IsNullOrWhiteSpace(Model.OtherInfo))
    {
        <div class="row-header">
            <p class="section-header">@Html.LabelFor(model => model.OtherInfo)</p><br />
            @Html.Raw(Model.OtherInfo)
        </div>
    }
}